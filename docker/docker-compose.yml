version: "3.8"
services:
  config-service:
    image: ghcr.io/ubaid4j/config-service:0.0.3-snapshot
    container_name: config-service
    ports:
      - "127.0.0.1:50100:50100"
    environment:
      LOGGING_LEVEL_ROOT: DEBUG
      LOGGING_LEVEL_WEB: DEBUG
    depends_on: 
      fluent-bit:
        condition: service_healthy
      tempo:
        condition: service_healthy
    healthcheck:
      test: "bash /health-check.sh"
      start_period: 1m
      interval: 1m
    volumes:
      - ./config-service/health-check.sh:/health-check.sh
    logging:
      driver: fluentd
      options: 
        fluentd-address: 127.0.0.1:55503
  edge-service:
    depends_on:
      polar-keycloak-docker:
        condition: service_healthy
      fluent-bit:
        condition: service_healthy
      tempo:
        condition: service_healthy
    image: ghcr.io/ubaid4j/edge-service:0.0.4-snapshot
    container_name: edge-service
    ports:
      - "127.0.0.1:50090:50090"
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-service:50100
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=1
      - SPRING_DATA_REDIS_HOST=polar-redis
      - SPRING_DATA_REDIS_PORT=6379
      - AUTH_SERVER_URL=http://polar-keycloak-docker:50907
      - CATALOG_SERVICE_URL=http://catalog-service:50101
      - ORDER_SERVICE_URL=http://order-service:50201
      - SPA_URL=http://polar-ui:9004
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.29.0.jar
      - OTEL_SERVICE_NAME=edge-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
    healthcheck:
      test: "bash /health-check.sh"
      start_period: 30s
    volumes:
      - ./edge-service/health-check.sh:/health-check.sh
    logging:
      driver: fluentd
      options: 
        fluentd-address: 127.0.0.1:55503
  catalog-service:
    depends_on:
      polar-keycloak-docker:
        condition: service_healthy
      polar-postgres:
        condition: service_healthy
      config-service:
        condition: service_healthy
      polar-redis:
        condition: service_healthy
      fluent-bit:
        condition: service_healthy
    image: ghcr.io/ubaid4j/catalog-service:0.0.6-snapshot
    container_name: catalog-service
    ports:
      - "127.0.0.1:50101:50101"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog
      - SPRING_CLOUD_CONFIG_URI=http://config-service:50100
      - SPRING_PROFILES_ACTIVE=prod,testdata
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - AUTH_SERVER_URL=http://polar-keycloak-docker:50907
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=50102
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.29.0.jar
      - OTEL_SERVICE_NAME=catalog-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      - DEBUG=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50101/management/health"]
      start_period: 45s
    volumes:
      - ./catalog-service/config:/workspace/config
    logging:
      driver: fluentd
      options: 
        fluentd-address: 127.0.0.1:55503
  order-service:
    depends_on:
      polar-postgres:
        condition: service_healthy
      config-service:
        condition: service_healthy
      polar-keycloak-docker:
        condition: service_healthy
      fluent-bit:
        condition: service_healthy
    image: ghcr.io/ubaid4j/order-service:0.0.5-snapshot
    container_name: order-service
    ports:
      - "127.0.0.1:50201:50201"
    environment:
      - SPRING_R2DBC_URL=r2dbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_FLYWAY_URL=jdbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_CLOUD_CONFIG_URI=http://config-service:50100
      - POLAR_CATALOG_SERVICE_URI=http://catalog-service:50101
      - AUTH_SERVER_URL=http://polar-keycloak-docker:50907
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_CLOUD_CONFIG_FAIL_FAST=false
      - SPRING_PROFILES_ACTIVE=prod
      - LOGGING_LEVEL_ROOT=INFO
      - DEBUG=true
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=50101
    healthcheck:
      test: "bash /health-check.sh"
      start_period: 2m
    volumes:
      - ./order-service/health-check.sh:/health-check.sh
    logging:
      driver: fluentd
      options: 
        fluentd-address: 127.0.0.1:55503
  dispatcher-service:
    image: ghcr.io/ubaid4j/dispatcher-service:0.0.2-snapshot
    container_name: dispatcher-service
    ports:
      - "127.0.0.1:50301:50301"
    environment:
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    depends_on:
      polar-keycloak-docker:
        condition: service_healthy
      fluent-bit:
        condition: service_healthy
    healthcheck:
      test: "bash /health-check.sh"
      start_period: 2m
    volumes:
      - ./dispatcher-service/health-check.sh:/health-check.sh
    logging:
      driver: fluentd
      options: 
        fluentd-address: 127.0.0.1:55503
  polar-postgres:
    image: postgres:latest
    container_name: polar-postgres
    ports:
      - "127.0.0.1:5590:5432"
    volumes:
      - ./postgres/init.sql/:/docker-entrypoint-initdb.d/init.sql
      - /private/storage/postgres-data/polar/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=polardb
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      start_period: 2m
  polar-redis:
    image: "redis:latest"
    container_name: "polar-redis"
    ports:
      - "127.0.0.1:50988:6379"
    volumes:
      - /private/storage/redis/polar-redis/:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      start_period: 2m
  polar-rabbitmq:
    image: rabbitmq:3.11.13-management
    container_name: polar-rabbitmq
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      start_period: 2m
  polar-keycloak-docker:
    image: quay.io/keycloak/keycloak:22.0.1-0
    container_name: polar-keycloak-docker
    command: start-dev --http-port 50907 --import-realm
    volumes:
      - ./keycloak/data:/opt/keycloak/data/import
      - ./keycloak/health-check.sh:/opt/keycloak/health-check.sh
    environment:
      - KEYCLOAK_ADMIN=user
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KC_HTTP_PORT=50907
      - KC_HEALTH_ENABLED=true
    ports:
      - "127.0.0.1:50907:50907"
    healthcheck:
      test: "bash /opt/keycloak/health-check.sh"
      start_period: 2m
  polar-ui:
    image: ghcr.io/ubaid4j/polar-ui:0.0.4-snapshot
    container_name: "polar-ui"
    ports:
      - "127.0.0.1:9004:9004"
    environment:
      - PORT=9004
    volumes:
      - ./polar-ui/health-check.sh:/health-check.sh
    healthcheck:
      test: "bash /health-check.sh"
  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana
    depends_on:
      prometheus:
        condition: service_healthy
      loki:
        condition: service_healthy
      tempo:
        condition: service_healthy
    ports:
      - "127.0.0.1:55501:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./observability/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./observability/grafana/grafana.ini:/etc/grafana/grafana.ini
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      start_period: 2m
  loki:
    image: grafana/loki:2.8.3
    container_name: loki
    depends_on: 
      fluent-bit:
        condition: service_healthy
    ports:
      - "127.0.0.1:55502:3100"
    healthcheck:
      test: [ "CMD", "wget", "-O", "/dev/null", "http://localhost:3100/ready" ]
      start_period: 2m
  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    container_name: fluent-bit
    ports:
      - "127.0.0.1:55503:2020"
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./observability/fluent-bit/bash:/bin/bash
      - ./observability/fluent-bit/wget:/bin/wget
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:2020/api/v1/health"]
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "127.0.0.1:55590:9090"
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:9090/-/ready"]
      start_period: 2m
  tempo:
    image: grafana/tempo:1.5.0
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "127.0.0.1:55595:4317"
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml
    healthcheck:
      test: [ "CMD", "wget", "-O", "/dev/null", "http://localhost:3100/ready" ]